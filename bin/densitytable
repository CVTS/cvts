#!/usr/bin/env python

"""Quick and dirty script for calculating densities on way ids."""

import os
import json
from glob import glob
from collections import defaultdict
from functools import reduce
from multiprocessing import Pool
import numpy as np
from tqdm import tqdm
from cvts.settings import OUT_PATH, SEQ_PATH

files = glob('{}{}{}'.format(SEQ_PATH, os.path.sep, '*.json'))

def mapper(filename):
    with open(filename, 'r') as inj:
        return np.unique(
            np.array(reduce(
                lambda a, b: a + b.get('way_ids', []),
                json.load(inj),
                [])),
            return_counts = True)

results = defaultdict(lambda: 0)
with Pool() as workers:
    for wids, cnts in tqdm(workers.imap_unordered(mapper, files), total=len(files)):
        for wid, cnt in zip(wids, cnts):
            results[wid] += cnt

with open(os.path.join(OUT_PATH, 'way_id_counts.csv'), 'w') as outf:
    outf.write('way_id,count\n')
    for wid, cnt in results.items():
        outf.write('{},{}\n'.format(wid, cnt))
